<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Container Builds on AWS Container DevSecOps</title>
    <link>//localhost:1313/build/</link>
    <description>Recent content in Container Builds on AWS Container DevSecOps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="//localhost:1313/build/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Secure Containers</title>
      <link>//localhost:1313/build/container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/build/container/</guid>
      <description>Baseline  DISABLE ROOT Mount the container&amp;rsquo;s root filesystem as read-only set k8s Security context set Linux Capabilities Disable privilege escalation   securityContext:  allowPrivilegeEscalation: false  Least Privilege by defining user  apiVersion: v1 kind: Pod metadata:  name: pod-security spec:  securityContext:  runAsUser: 10000  runAsGroup: 30000  fsGroup: 20000   Network policies
  Workload configuration should be audited regularly, Kubesec
  Container Capabilities</description>
    </item>
    
    <item>
      <title>Secure Containers Exercise</title>
      <link>//localhost:1313/build/exercise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/build/exercise/</guid>
      <description>In this Exercise we are going to
 Run Application locally Run in Docker compose Go Reporter for static Analysis Go Sec for code cve scanning Secure Dockerfile  You may need to start docker
 sudo service docker start
Redirecting to /bin/systemctl start docker.service Navigate to DevSecops repo cd ~/environment/devsecopspipeline
Set a temp password for the local database
export DB_PASSWORD=temppassword
1. Run locally Run the Golang tests locally
make test</description>
    </item>
    
  </channel>
</rss>
